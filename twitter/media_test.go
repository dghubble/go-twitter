package twitter

import (
	"fmt"
	"net/http"
	"testing"

	"github.com/stretchr/testify/assert"
	"os"
)

func TestMediaService_UploadFile(t *testing.T) {
	httpClient, mux, server := testServer()
	defer server.Close()

	mux.HandleFunc("/1.1/media/upload.json", func(w http.ResponseWriter, r *http.Request) {
		assertMethod(t, "POST", r)
		assertQuery(t, map[string]string{}, r)
		assertPostForm(t, map[string]string{"media_data": "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Y2VFdmVudCMiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMTctMTEtMTZUMDA6MTI6NDAtMDY6MDAiIHhtcDpNZXRhZGF0YURhdGU9IjIwMTctMTEtMTZUMDA6MTI6NDAtMDY6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDE3LTExLTE2VDAwOjEyOjQwLTA2OjAwIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmRhOTJiZTBjLTE5YTctNDE2MS05YTgxLWU3ZjU0N2Q4NTVjMiIgeG1wTU06RG9jdW1lbnRJRD0iYWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjAzZmRhYTg1LWVhN2EtYmU0MS1iYzhiLTEyMDliZjdmYjU0MiIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjljNWQ2ODcwLWQ3MTYtNGRlOS05NWI1LTY0NTY4M2YyYWRmYyIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJEaXNwbGF5Ij4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo5YzVkNjg3MC1kNzE2LTRkZTktOTViNS02NDU2ODNmMmFkZmMiIHN0RXZ0OndoZW49IjIwMTctMTEtMTZUMDA6MTI6NDAtMDY6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDQyAoTWFjaW50b3NoKSIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGE5MmJlMGMtMTlhNy00MTYxLTlhODEtZTdmNTQ3ZDg1NWMyIiBzdEV2dDp3aGVuPSIyMDE3LTExLTE2VDAwOjEyOjQwLTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ0MgKE1hY2ludG9zaCkiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+oNqr1wAAAAxJREFUCJlj6K9IAgADAwFquBoEJQAAAABJRU5ErkJggg=="}, r)
		w.Header().Set("Content-Type", "application/json")
		fmt.Fprintf(w, `{"media_id":931033976529092608,"media_id_string":"931033976529092608","size":397666,"expires_after_secs":86400,"image":{"image_type":"image\/jpeg","w":1200,"h":1200}}`)
	})

	client := NewClient(httpClient)

	dir, _ := os.Getwd()
	photoPath := dir + "/../photo.png"
	mediaObject, _, err := client.Media.UploadFile(photoPath)
	expected := &Media{MediaID: 931033976529092608, MediaIDString: "931033976529092608", Size: 397666, ExpiresAfterSeconds: 86400, Image: &MediaImage{ImageType: "image/jpeg", Width: 1200, Height: 1200}}
	assert.Nil(t, err)
	assert.Equal(t, expected, mediaObject)
}
